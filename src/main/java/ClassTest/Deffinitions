S.No.	Annotations	                                                Description

1	    @Test	                                                    Indicates that a public void method can be executed as a test case
2	    @Before	                                                    Executes statements before each test case
3	    @BeforeClass	                                            Executes statements before all test cases
4	    @After	                                                    Executes statements after each test case
5	    @AfterClass	                                                Executes statements after all test cases
6	    @Ignores	                                                Ignores statements during test execution
7	    @Test(timeout=500)	                                        Sets a timeout during test execution
8	    @Test(expected=IllegalArgumentException.class)	            Handles exceptions during test execution


                                     --- Assert Class ---
S.No.	Method	                                                    Description

1.	    void assertEquals(boolean expected, boolean actual)	        It checks whether two values are equals similar to equals method of Object class
2.	    void assertFalse(boolean condition)	                        functionality is to check that a condition is false.
3.	    void assertNotNull(Object object)	                        “assertNotNull” functionality is to check that an object is not null.
4.	    void assertNull(Object object)	                            “assertNull” functionality is to check that an object is null.
5.	    void assertTrue(boolean condition)	                        “assertTrue” functionality is to check that a condition is true.
6.	    void fail()	                                                If you want to throw any assertion error, you have fail() that always results in a fail verdict.
7.	    void assertSame([String message]	                        “assertSame” functionality is to check that the two objects refer to the same object.
8.	    void assertNotSame([String message]	                        “assertNotSame” functionality is to check that the two objects do not refer to the same object.


                                    --- Test Cases Class---
S.No.	Method	                                                    Description

1.	    int countTestCases()	                                    This method is used to count how many number of test cases executed by run(TestResult tr) method.
2.	    TestResult createResult()	                                This method is used to create a TestResult object.
3.	    String getName()	                                        This method returns a string which is nothing but a TestCase.
4.	    TestResult run()	                                        This method is used to execute a test which returns a TestResult object
5.	    void run(TestResult result)	                                This method is used to execute a test having a TestResult object which doesn’t returns anything.
6.	    void setName(String name)	                                This method is used to set a name of a TestCase.
7.	    void setUp()	                                            This method is used to write resource association code. e.g. Create a database connection.
8.	    void tearDown()	                                            This method is used to write resource release code. e.g. Release database connection after performing transaction operation.


                                    --- TestResult Class ---
S.No.	Method	                                                        Description

1.	    void addError(Test test, Throwable t)	                        This method is used if you require add an error to the test.
2.	    void addFailure(Test test, AssertionFailedError t)	            This method is used if you require add a failure to the list of failures.
3.	    void endTest(Test test)	                                        This method is used to notify that a test is performed(completed)
4.	    int errorCount()	                                            This method is used to get the error detected during test execution.
5.	    Enumeration<TestFailure> errors()	                            This method simply returns a collection (Enumeration here) of errors.
6.	    int failureCount()	                                            This method is used to get the count of errors detected during test execution.
7.	    void run(TestCase test)	                                        This method is used to execute a test case.
8.	    int runCount()	                                                This method simply counts the executed test.
9.	    void startTest(Test test)	                                    This method is used to notify that a test is started.
10.	    void stop()	                                                    This method is used to test run to be stopped.



                                    --- Test Suite Class ---
S.No.	Method	                                                        Description

1.	    void addTest(Test test)	                                        This method is used if you want to add a test to the suite.
2.	    void addTestSuite(Class<? extends TestCase> testClass)	        This method is used if you want to specify the class while adding a test to the suite.
3.	    int countTestCases()	                                        This method is used if you want to count the number of test cases.
4.	    String getName()	                                            This method is used to get the name of the test suite.
5.	    void run(TestResult result)	                                    This method is used to execute a test and collect test result in TestResult object.
6.	    void setName(String name)	                                    This method is used to set the name of TestSuite.
7.	    Test testAt(int index)	                                        This method is used if you want to return the test at given index.
8.	    int testCount()	                                                This method is used if you want to return a number of tests in the Suite.
9.	    static Test warning(String message)	                            This method returns a test which will fail and log a warning message.


